raceback (most recent call last):
  File "/home/drone/.conda/envs/tensor/lib/python3.9/site-packages/tensorflow/python/keras/engine/node.py", line 188, in serialize
    json.dumps(kwargs, default=json_utils.get_json_type)
  File "/home/drone/.conda/envs/tensor/lib/python3.9/json/__init__.py", line 234, in dumps
    return cls(
  File "/home/drone/.conda/envs/tensor/lib/python3.9/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/home/drone/.conda/envs/tensor/lib/python3.9/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/drone/.conda/envs/tensor/lib/python3.9/site-packages/tensorflow/python/keras/saving/saved_model/json_utils.py", line 143, in get_json_type
    raise TypeError('Not JSON Serializable:', obj)
TypeError: ('Not JSON Serializable:', <tf.Variable 'block1_conv1/kernel:0' shape=(3, 3, 3, 64) dtype=float32, numpy=
array([[[[ 4.29470569e-01,  1.17273867e-01,  3.40129584e-02, ...,
          -1.32241577e-01, -5.33475243e-02,  7.57738389e-03],
         [ 5.50379455e-01,  2.08774377e-02,  9.88311544e-02, ...,
          -8.48205537e-02, -5.11389151e-02,  3.74943428e-02],
         [ 4.80015397e-01, -1.72696680e-01,  3.75577137e-02, ...,
          -1.27135560e-01, -5.02991639e-02,  3.48965675e-02]],

        [[ 3.73466998e-01,  1.62062630e-01,  1.70863140e-03, ...,
          -1.48207128e-01, -2.35300660e-01, -6.30356818e-02],
         [ 4.40074533e-01,  4.73412387e-02,  5.13819456e-02, ...,
          -9.88498852e-02, -2.96195745e-01, -7.04357103e-02],
         [ 4.08547401e-01, -1.70375049e-01, -4.96297423e-03, ...,
          -1.22360572e-01, -2.76450396e-01, -3.90796512e-02]],

        [[-6.13601133e-02,  1.35693997e-01, -1.15694344e-01, ...,
          -1.40158370e-01, -3.77666801e-01, -3.00509870e-01],
         [-8.13870355e-02,  4.18543853e-02, -1.01763301e-01, ...,
          -9.43124294e-02, -5.05662560e-01, -3.83694321e-01],
         [-6.51455522e-02, -1.54351532e-01, -1.38038069e-01, ...,
          -1.29404560e-01, -4.62243795e-01, -3.23985279e-01]]],


       [[[ 2.74769872e-01,  1.48350164e-01,  1.61559835e-01, ...,
          -1.14316158e-01,  3.65494519e-01,  3.39938998e-01],
         [ 3.45739067e-01,  3.10493708e-02,  2.40750551e-01, ...,
          -6.93419054e-02,  4.37116861e-01,  4.13171440e-01],
         [ 3.10477257e-01, -1.87601492e-01,  1.66595340e-01, ...,
          -9.88388434e-02,  4.04058546e-01,  3.92561197e-01]],

        [[ 3.86807770e-02,  2.02298447e-01,  1.56414255e-01, ...,
          -5.20089604e-02,  2.57149011e-01,  3.71682674e-01],
         [ 4.06322069e-02,  6.58102185e-02,  2.20311403e-01, ...,
          -3.78979952e-03,  2.69412428e-01,  4.09505904e-01],
         [ 5.02023660e-02, -1.77571565e-01,  1.51188180e-01, ...,
          -1.40649760e-02,  2.59300828e-01,  4.23764467e-01]],

        [[-3.67223352e-01,  1.61688417e-01, -8.99365395e-02, ...,
          -1.45945460e-01, -2.71823555e-01, -2.39718184e-01],
         [-4.53501314e-01,  4.62574959e-02, -6.67438358e-02, ...,
          -1.03502415e-01, -3.45792353e-01, -2.92486250e-01],
         [-4.03383434e-01, -1.74399972e-01, -1.09849639e-01, ...,
          -1.25688612e-01, -3.14026326e-01, -2.32839763e-01]]],


       [[[-5.74681684e-02,  1.29344285e-01,  1.29030216e-02, ...,
          -1.41449392e-01,  2.41099641e-01,  4.55602147e-02],
         [-5.86349145e-02,  3.16787697e-02,  7.59588331e-02, ...,
          -1.05017252e-01,  3.39550197e-01,  9.86374393e-02],
         [-5.08716851e-02, -1.66002661e-01,  1.56279504e-02, ...,
          -1.49742723e-01,  3.06801915e-01,  8.82701725e-02]],

        [[-2.62249678e-01,  1.71572417e-01,  5.44555223e-05, ...,
          -1.22728683e-01,  2.44687453e-01,  5.32913655e-02],
         [-3.30669671e-01,  5.47101051e-02,  4.86797579e-02, ...,
          -8.29023942e-02,  2.95466095e-01,  7.44469985e-02],
         [-2.85227507e-01, -1.66666731e-01, -7.96697661e-03, ...,
          -1.09780088e-01,  2.79203743e-01,  9.46525261e-02]],

        [[-3.50096762e-01,  1.38710454e-01, -1.25339806e-01, ...,
          -1.53092295e-01, -1.39917329e-01, -2.65075237e-01],
         [-4.85030204e-01,  4.23195846e-02, -1.12076312e-01, ...,
          -1.18306056e-01, -1.67058021e-01, -3.22241962e-01],
         [-4.18516338e-01, -1.57048807e-01, -1.49133086e-01, ...,
          -1.56839803e-01, -1.42874300e-01, -2.69694626e-01]]]],
      dtype=float32)>)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/drone/Desktop/Autonomous-Ai-drone-scripts/modules/training.py", line 208, in <module>
    model.save('trained_best_model_full_set_vgg16_tranfer.h5')
  File "/home/drone/.conda/envs/tensor/lib/python3.9/site-packages/tensorflow/python/keras/engine/training.py", line 2134, in save
    save.save_model(self, filepath, overwrite, include_optimizer, save_format,
  File "/home/drone/.conda/envs/tensor/lib/python3.9/site-packages/tensorflow/python/keras/saving/save.py", line 146, in save_model
    hdf5_format.save_model_to_hdf5(
  File "/home/drone/.conda/envs/tensor/lib/python3.9/site-packages/tensorflow/python/keras/saving/hdf5_format.py", line 110, in save_model_to_hdf5
    model_metadata = saving_utils.model_metadata(model, include_optimizer)
  File "/home/drone/.conda/envs/tensor/lib/python3.9/site-packages/tensorflow/python/keras/saving/saving_utils.py", line 150, in model_metadata
    model_config['config'] = model.get_config()
  File "/home/drone/.conda/envs/tensor/lib/python3.9/site-packages/tensorflow/python/keras/engine/functional.py", line 648, in get_config
    return copy.deepcopy(get_network_config(self))
  File "/home/drone/.conda/envs/tensor/lib/python3.9/site-packages/tensorflow/python/keras/engine/functional.py", line 1351, in get_network_config
    node_data = node.serialize(_make_node_key, node_conversion_map)
  File "/home/drone/.conda/envs/tensor/lib/python3.9/site-packages/tensorflow/python/keras/engine/node.py", line 191, in serialize
    raise TypeError('Layer ' + self.layer.name +
TypeError: Layer tf.nn.convolution was passed non-JSON-serializable arguments. Arguments had types: {'filters': <class 'tensorflow.python.ops.resource_variable_ops.ResourceVariable'>, 'strides': [<class 'int'>, <class 'int'>], 'padding': <class 'str'>, 'dilations': [<class 'int'>, <class 'int'>], 'data_format': <class 'str'>, 'name': <class 'str'>}. They cannot be serialized out when saving the model.
